name: Build and Deploy Docs to GitHub Pages

on:
  push:
    branches:
      - master

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install and cache apt packages
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: neovim
          version: 1.0

      - name: Restore Rust cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.rustup
          key: ${{ runner.os }}-rust

      - name: Install Rust
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install Rust crates
        run: |
          cargo install just
          cargo install \
              --git https://github.com/bkoropoff/emmylua-analyzer-rust.git \
              emmylua_doc_cli
          find ~/.cargo/.crates.toml ~/.cargo/.crates2.json ~/.cargo/bin/ ~/.cargo/registry/index/ ~/.cargo/registry/cache/ ~/.cargo/git/db/ ~/.rustup -type f -print0 | xargs -0 md5sum > rust-hash
          echo RUST_HASH=`md5sum rust-hash | cut -d' ' -f 1` >> "$GITHUB_ENV"

      - name: Save Rust cache
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.rustup
          key: ${{ runner.os }}-rust-${{ env.RUST_HASH }}

      - name: Restore python cache
        uses: actions/cache/restore@v4
        with:
          path: |
            ~/.local/bin/uv
            ~/.local/share/uv
            ~/.cache/uv
            ~/.venv
          key: ${{ runner.os }}-python

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.venv/bin" >> $GITHUB_PATH
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install python packages
        run: |
          uv python install --default 3.12
          uv venv ~/.venv
          uv pip install \
              sphinx sphinx-rtd-theme myst-parser \
              'sphinx-lua-ls @ git+https://github.com/bkoropoff/sphinx-lua-ls'
          find ~/.local/bin/uv ~/.local/share/uv ~/.cache/uv ~/.venv -type f ! -name '_sysconfigdata*.pyc' ! -path '*/interpreter-v4/*.msgpack' -print0 | xargs -0 md5sum > python-hash
          echo PYTHON_HASH=`md5sum python-hash | cut -d' ' -f 1` >> "$GITHUB_ENV"

      - name: Save python cache
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.local/bin/uv
            ~/.local/share/uv
            ~/.cache/uv
            ~/.venv
          key: ${{ runner.os }}-python-${{ env.PYTHON_HASH }}

      - name: Generate documentation
        run: just doc

      # - name: Upload hash files
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: hashes
      #     path: '*-hash'

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: html-out/

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
